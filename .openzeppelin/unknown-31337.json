{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      "txHash": "0xd33de9bf0e9f2ba020c5e52edab416b9fb7d01f32ecc99a889147e110bcb7358",
      "kind": "uups"
    },
    {
      "address": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
      "txHash": "0x15f7269e0324e94638a0240d4a4ae54c51ef038ff60fb8547b3f5edb9a30579b",
      "kind": "uups"
    },
    {
      "address": "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
      "txHash": "0x5a495ee168eaf4658e6b811226a34a72f86317f67d1d521b0b9b894feb666ad7",
      "kind": "uups"
    },
    {
      "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
      "txHash": "0x82e37a325a63f5fa3cd76c950e84ae9009f4ce248b31baccf627857b3c876641",
      "kind": "uups"
    },
    {
      "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
      "txHash": "0xc5a16ca91ddeaf520ef463da770bc1836ea9a645963a0dfea1f8ea5d6be66a59",
      "kind": "uups"
    },
    {
      "address": "0x8A791620dd6260079BF849Dc5567aDC3F2FdC318",
      "txHash": "0x9d3ee359cde8048bc4d936d3a1e04813e85cf9104a27e5e05a84c55e954a30af",
      "kind": "uups"
    }
  ],
  "impls": {
    "86d5f52d8aa712ea203820cd6f4c00766c288666bc688e7753b1b8026b2ec244": {
      "address": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
      "txHash": "0x5a77aa7ea0783f13c1d0f8086d2ff13afcd6918cc7e28c8e602133085d28767c",
      "layout": {
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "51",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "53",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "54",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "55",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "56",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:394"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC20BurnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol:51"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "251",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "manager",
            "offset": 0,
            "slot": "301",
            "type": "t_address",
            "contract": "SeedToken",
            "src": "contracts/token/SeedToken.sol:13"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          }
        }
      }
    },
    "9fdf9cbf4f48ba00fbc85ade99e3ed2590367084eca13beab0a3cabf7cb4a8a6": {
      "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
      "txHash": "0xe497bdfafc58dc2c4ff0423fa510fafcb3daa6af94549fe2ee8c947ff4e389ad",
      "layout": {
        "storage": [
          {
            "label": "_wormholeState",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(State)26_storage",
            "contract": "WormholeCommon",
            "src": "@ndujalabs/wormhole-tunnel/contracts/WormholeCommon.sol:29"
          },
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "3",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "3",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "54",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "55",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "254",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "synr",
            "offset": 0,
            "slot": "304",
            "type": "t_contract(SyndicateERC20)11033",
            "contract": "InputPool",
            "src": "contracts/InputPool.sol:17"
          },
          {
            "label": "sSynr",
            "offset": 0,
            "slot": "305",
            "type": "t_contract(SyntheticSyndicateERC20)11153",
            "contract": "InputPool",
            "src": "contracts/InputPool.sol:18"
          },
          {
            "label": "pass",
            "offset": 0,
            "slot": "306",
            "type": "t_contract(SynCityPasses)9474",
            "contract": "InputPool",
            "src": "contracts/InputPool.sol:19"
          },
          {
            "label": "encodedStatus",
            "offset": 0,
            "slot": "307",
            "type": "t_uint256",
            "contract": "InputPool",
            "src": "contracts/InputPool.sol:51"
          },
          {
            "label": "users",
            "offset": 0,
            "slot": "308",
            "type": "t_mapping(t_address,t_struct(User)7855_storage)",
            "contract": "InputPool",
            "src": "contracts/InputPool.sol:54"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_struct(Deposit)7844_storage)dyn_storage": {
            "label": "struct InputPool.Deposit[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(SynCityPasses)9474": {
            "label": "contract SynCityPasses"
          },
          "t_contract(SyndicateERC20)11033": {
            "label": "contract SyndicateERC20"
          },
          "t_contract(SyntheticSyndicateERC20)11153": {
            "label": "contract SyntheticSyndicateERC20"
          },
          "t_mapping(t_address,t_struct(User)7855_storage)": {
            "label": "mapping(address => struct InputPool.User)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_uint16,t_bytes32)": {
            "label": "mapping(uint16 => bytes32)"
          },
          "t_struct(Deposit)7844_storage": {
            "label": "struct InputPool.Deposit",
            "members": [
              {
                "label": "tokenType",
                "type": "t_uint8"
              },
              {
                "label": "tokenAmount",
                "type": "t_uint96"
              },
              {
                "label": "lockedFrom",
                "type": "t_uint32"
              },
              {
                "label": "lockedUntil",
                "type": "t_uint32"
              },
              {
                "label": "unstaked",
                "type": "t_uint8"
              }
            ]
          },
          "t_struct(State)26_storage": {
            "label": "struct WormholeCommon.State",
            "members": [
              {
                "label": "wormhole",
                "type": "t_address_payable"
              },
              {
                "label": "chainId",
                "type": "t_uint16"
              },
              {
                "label": "completedTransfers",
                "type": "t_mapping(t_bytes32,t_bool)"
              },
              {
                "label": "contractsByChainId",
                "type": "t_mapping(t_uint16,t_bytes32)"
              }
            ]
          },
          "t_struct(User)7855_storage": {
            "label": "struct InputPool.User",
            "members": [
              {
                "label": "synrAmount",
                "type": "t_uint96"
              },
              {
                "label": "sSynrAmount",
                "type": "t_uint96"
              },
              {
                "label": "passAmount",
                "type": "t_uint16"
              },
              {
                "label": "deposits",
                "type": "t_array(t_struct(Deposit)7844_storage)dyn_storage"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint96": {
            "label": "uint96"
          }
        }
      }
    },
    "3b17af9027b117e05e15f055038d56664e9e3f8ed9491a30662578aedd72a098": {
      "address": "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
      "txHash": "0x2e6172c01655f2de5f1e4bb90c3f695f2d3e06cc1e87b56676eb25962cce008b",
      "layout": {
        "storage": [
          {
            "label": "_wormholeState",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(State)26_storage",
            "contract": "WormholeCommon",
            "src": "@ndujalabs/wormhole-tunnel/contracts/WormholeCommon.sol:29"
          },
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "3",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "3",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "54",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "55",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "254",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "seed",
            "offset": 0,
            "slot": "304",
            "type": "t_contract(SeedToken)7208",
            "contract": "SeedFactory",
            "src": "contracts/SeedFactory.sol:15"
          },
          {
            "label": "users",
            "offset": 0,
            "slot": "305",
            "type": "t_mapping(t_address,t_struct(User)5779_storage)",
            "contract": "SeedFactory",
            "src": "contracts/SeedFactory.sol:41"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_struct(Deposit)5770_storage)dyn_storage": {
            "label": "struct SeedFactory.Deposit[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(SeedToken)7208": {
            "label": "contract SeedToken"
          },
          "t_mapping(t_address,t_struct(User)5779_storage)": {
            "label": "mapping(address => struct SeedFactory.User)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_uint16,t_bytes32)": {
            "label": "mapping(uint16 => bytes32)"
          },
          "t_struct(Deposit)5770_storage": {
            "label": "struct SeedFactory.Deposit",
            "members": [
              {
                "label": "tokenType",
                "type": "t_uint8"
              },
              {
                "label": "lockedFrom",
                "type": "t_uint32"
              },
              {
                "label": "lockedUntil",
                "type": "t_uint32"
              },
              {
                "label": "tokenAmount",
                "type": "t_uint96"
              },
              {
                "label": "unlocked",
                "type": "t_uint8"
              }
            ]
          },
          "t_struct(State)26_storage": {
            "label": "struct WormholeCommon.State",
            "members": [
              {
                "label": "wormhole",
                "type": "t_address_payable"
              },
              {
                "label": "chainId",
                "type": "t_uint16"
              },
              {
                "label": "completedTransfers",
                "type": "t_mapping(t_bytes32,t_bool)"
              },
              {
                "label": "contractsByChainId",
                "type": "t_mapping(t_uint16,t_bytes32)"
              }
            ]
          },
          "t_struct(User)5779_storage": {
            "label": "struct SeedFactory.User",
            "members": [
              {
                "label": "synrAmount",
                "type": "t_uint96"
              },
              {
                "label": "sSynrAmount",
                "type": "t_uint96"
              },
              {
                "label": "deposits",
                "type": "t_array(t_struct(Deposit)5770_storage)dyn_storage"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint96": {
            "label": "uint96"
          }
        }
      }
    },
    "d515a1b66cc3f14d3a92057df8ca629c6f6702b9b9f42f466ddb534b2f40d9f3": {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0x556ee828217ef56f55f46e089053c360a5184b211c1f485ff5e0b409f73101fc",
      "layout": {
        "storage": [
          {
            "label": "_wormholeState",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(State)26_storage",
            "contract": "WormholeCommon",
            "src": "@ndujalabs/wormhole-tunnel/contracts/WormholeCommon.sol:29"
          },
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "3",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "3",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "54",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "55",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "105",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "154",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "204",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "254",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "synr",
            "offset": 0,
            "slot": "304",
            "type": "t_contract(SyndicateERC20)8767",
            "contract": "SynrPool",
            "src": "contracts/SynrPool.sol:44"
          },
          {
            "label": "sSynr",
            "offset": 0,
            "slot": "305",
            "type": "t_contract(SyntheticSyndicateERC20)8887",
            "contract": "SynrPool",
            "src": "contracts/SynrPool.sol:45"
          },
          {
            "label": "encodedStatus",
            "offset": 0,
            "slot": "306",
            "type": "t_uint256",
            "contract": "SynrPool",
            "src": "contracts/SynrPool.sol:49"
          },
          {
            "label": "users",
            "offset": 0,
            "slot": "307",
            "type": "t_mapping(t_address,t_struct(User)6270_storage)",
            "contract": "SynrPool",
            "src": "contracts/SynrPool.sol:52"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_address_payable": {
            "label": "address payable"
          },
          "t_array(t_struct(Deposit)6261_storage)dyn_storage": {
            "label": "struct SynrPool.Deposit[]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_contract(SyndicateERC20)8767": {
            "label": "contract SyndicateERC20"
          },
          "t_contract(SyntheticSyndicateERC20)8887": {
            "label": "contract SyntheticSyndicateERC20"
          },
          "t_mapping(t_address,t_struct(User)6270_storage)": {
            "label": "mapping(address => struct SynrPool.User)"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)"
          },
          "t_mapping(t_uint16,t_bytes32)": {
            "label": "mapping(uint16 => bytes32)"
          },
          "t_struct(Deposit)6261_storage": {
            "label": "struct SynrPool.Deposit",
            "members": [
              {
                "label": "tokenType",
                "type": "t_uint8"
              },
              {
                "label": "lockedFrom",
                "type": "t_uint32"
              },
              {
                "label": "lockedUntil",
                "type": "t_uint32"
              },
              {
                "label": "tokenAmount",
                "type": "t_uint96"
              },
              {
                "label": "unlocked",
                "type": "t_uint8"
              }
            ]
          },
          "t_struct(State)26_storage": {
            "label": "struct WormholeCommon.State",
            "members": [
              {
                "label": "wormhole",
                "type": "t_address_payable"
              },
              {
                "label": "chainId",
                "type": "t_uint16"
              },
              {
                "label": "completedTransfers",
                "type": "t_mapping(t_bytes32,t_bool)"
              },
              {
                "label": "contractsByChainId",
                "type": "t_mapping(t_uint16,t_bytes32)"
              }
            ]
          },
          "t_struct(User)6270_storage": {
            "label": "struct SynrPool.User",
            "members": [
              {
                "label": "synrAmount",
                "type": "t_uint96"
              },
              {
                "label": "sSynrAmount",
                "type": "t_uint96"
              },
              {
                "label": "deposits",
                "type": "t_array(t_struct(Deposit)6261_storage)dyn_storage"
              }
            ]
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_uint96": {
            "label": "uint96"
          }
        }
      }
    }
  }
}
